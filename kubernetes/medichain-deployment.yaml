apiVersion: apps/v1
kind: Deployment
metadata:
  name: medichain-backend
  namespace: medichain
  labels:
    app: medichain-backend
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: medichain-backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: medichain-backend
        version: v1.0.0
    spec:
      containers:
      - name: backend
        image: medichain/backend:v1.0.0
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: medichain-secrets
              key: database-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: medichain-secrets
              key: jwt-secret
        - name: HEDERA_OPERATOR_ID
          valueFrom:
            secretKeyRef:
              name: medichain-secrets
              key: hedera-operator-id
        - name: HEDERA_OPERATOR_KEY
          valueFrom:
            secretKeyRef:
              name: medichain-secrets
              key: hedera-operator-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: medichain-frontend
  namespace: medichain
  labels:
    app: medichain-frontend
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: medichain-frontend
  template:
    metadata:
      labels:
        app: medichain-frontend
        version: v1.0.0
    spec:
      containers:
      - name: frontend
        image: medichain/frontend:v1.0.0
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 101
          allowPrivilegeEscalation: false
---
apiVersion: v1
kind: Service
metadata:
  name: medichain-backend-service
  namespace: medichain
spec:
  selector:
    app: medichain-backend
  ports:
  - port: 80
    targetPort: 3001
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: medichain-frontend-service
  namespace: medichain
spec:
  selector:
    app: medichain-frontend
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: medichain-ingress
  namespace: medichain
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
spec:
  tls:
  - hosts:
    - medichain.com
    - api.medichain.com
    secretName: medichain-tls
  rules:
  - host: medichain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: medichain-frontend-service
            port:
              number: 80
  - host: api.medichain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: medichain-backend-service
            port:
              number: 80